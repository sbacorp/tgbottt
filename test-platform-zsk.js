const { platformZskService } = require('./dist/services/platform_zsk');

async function testPlatformZsk() {
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Platform ZSK —Å–µ—Ä–≤–∏—Å–∞...');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
    await platformZskService.init();
    console.log('‚úÖ –°–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    
    // –¢–µ—Å—Ç–æ–≤—ã–π –ò–ù–ù (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
    const testInn = '1234567890';
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ò–ù–ù: ${testInn}`);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
    const result = await platformZskService.checkInn(testInn);
    
    console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
    console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:', result);
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å
    await platformZskService.close();
    console.log('‚úÖ –°–µ—Ä–≤–∏—Å –∑–∞–∫—Ä—ã—Ç');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testPlatformZsk();