import { MyConversation } from '../types';
import { database } from '../database';
import { MESSAGES } from '../utils/config';
import logger from '../utils/logger';
import { Context, InlineKeyboard } from "grammy";
import { createCancelKeyboard } from '../helpers/keyboard';
import { validateInn } from '../utils/validation';

/**
 * Conversation –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ò–ù–ù –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–∑ –≥—Ä—É–ø–ø—ã
 */
export async function removeInnFromGroupConversation(
  conversation: MyConversation,
  ctx: Context
) {
  const telegramId = ctx.from?.id;
  
  if (!telegramId) {
    await ctx.reply(MESSAGES.error);
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä—É–ø–ø—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userGroup = await database.getUserGroup(telegramId);
  if (!userGroup) {
    await ctx.editMessageText('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –≥—Ä—É–ø–ø—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π.');
    return;
  }

  // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –≥—Ä—É–ø–ø—ã
  const organizations = await database.getGroupOrganizations(userGroup.id);
  
  if (organizations.length === 0) {
    await ctx.editMessageText(
      `üìã <b>–°–ø–∏—Å–æ–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –ø—É—Å—Ç</b>\n\n` +
      `–í –≥—Ä—É–ø–ø–µ "${userGroup.name}" –Ω–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.`,
      {
        parse_mode: 'HTML',
        reply_markup: new InlineKeyboard().text("üîô –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é", "back_to_tracking")
      }
    );
    return;
  }

  let inn: string;
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const orgList = organizations.map((org, index) => 
    `${index + 1}. ${org.name} (${org.inn})`
  ).join('\n');

  await ctx.editMessageText(
    `‚ûñ <b>–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–∑ –≥—Ä—É–ø–ø—ã "${userGroup.name}"</b>\n\n` +
    `<b>–¢–µ–∫—É—â–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏:</b>\n${orgList}\n\n` +
    `–í–≤–µ–¥–∏—Ç–µ –ò–ù–ù –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:`,
    {
      parse_mode: 'HTML',
      reply_markup: createCancelKeyboard()
    }
  );

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –ò–ù–ù
  do {
    const context = await conversation.wait();

    if (context.callbackQuery?.data === 'cancel_conversation') {
      await context.editMessageText('‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ');
      return;
    }

    inn = context.message?.text?.trim() || '';

    if (!inn) {
      await context.reply('‚ùå –ò–ù–ù –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:', {
        reply_markup: createCancelKeyboard()
      });
      continue;
    }

    if (!validateInn(inn)) {
      await context.reply('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ò–ù–ù. –ò–ù–ù –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 10 –∏–ª–∏ 12 —Ü–∏—Ñ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:', {
        reply_markup: createCancelKeyboard()
      });
      continue;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –≤ –≥—Ä—É–ø–ø–µ
    const orgExists = organizations.some(org => org.inn === inn);
    if (!orgExists) {
      await context.reply('‚ùå –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Å —Ç–∞–∫–∏–º –ò–ù–ù –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –≥—Ä—É–ø–ø–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:', {
        reply_markup: createCancelKeyboard()
      });
      continue;
    }

    break;
  } while (true);

  await ctx.editMessageText('üîÑ –£–¥–∞–ª—è—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –∏–∑ –≥—Ä—É–ø–ø—ã...');

  try {
    // –ù–∞—Ö–æ–¥–∏–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è
    const organization = organizations.find(org => org.inn === inn);
    
    // –£–¥–∞–ª—è–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –∏–∑ –≥—Ä—É–ø–ø—ã
    await database.removeGroupOrganization(userGroup.id, inn);

    // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é
    const backKeyboard = new InlineKeyboard()
      .text("üìã –°–ø–∏—Å–æ–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π", "tracking_organizations")
      .row()
      .text("üîô –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é", "back_to_tracking");

    await ctx.reply(
      `‚úÖ <b>–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞!</b>\n\n` +
      `üè¢ <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> ${organization?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n` +
      `üÜî <b>–ò–ù–ù:</b> ${inn}\n\n` +
      `–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –≥—Ä—É–ø–ø—ã "${userGroup.name}".`,
      {
        parse_mode: 'HTML',
        reply_markup: backKeyboard
      }
    );

    logger.info(`User ${telegramId} removed organization ${inn} from group ${userGroup.id}`);

  } catch (error) {
    logger.error('Error removing organization from group:', error);
    await ctx.editMessageText('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
}
