import { MyContext } from '../types';
import { database } from '../database';
import { MESSAGES } from '../utils/config';
import logger from '../utils/logger';

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /users
 */
export async function handleUsers(ctx: MyContext): Promise<void> {
  try {
    if (!ctx.session.isAdmin) {
      await ctx.reply('–∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤');
      return;
    }

    const users = await database.getAllUsers();
    
    if (users.length === 0) {
      await ctx.reply(MESSAGES.noUsers);
      return;
    }

    let message = 'üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π (–∞–∫—Ç—É–∞–ª—å–Ω—ã–π):\n\n';
    
    for (const user of users) {
      const adminBadge = user.is_admin ? ' –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '';
      const username = user.username ? `@${user.username}` : `ID: ${user.telegram_id}`;
      
      message += `${username}${adminBadge}\n`;
    }

    await ctx.reply(message);
  } catch (error) {
    logger.error('Error in handleUsers:', error);
    await ctx.reply(MESSAGES.error);
  }
}
