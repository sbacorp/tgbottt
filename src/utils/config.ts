import dotenv from 'dotenv';
import { z } from 'zod';

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –°—Ö–µ–º–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å Zod
const configSchema = z.object({
  BOT_TOKEN: z.string().min(1, "BOT_TOKEN is required"),
  NODE_ENV: z.enum(["development", "production"]).default("development"),
  
  // Supabase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è)
  SUPABASE_URL: z.string().min(1, "SUPABASE_URL is required"),
  SUPABASE_ANON_KEY: z.string().min(1, "SUPABASE_ANON_KEY is required"),
  SUPABASE_SERVICE_ROLE_KEY: z.string().optional(),
  
  // –î—Ä—É–≥–∏–µ API –∫–ª—é—á–∏
  CLAUDE_API_KEY: z.string().default(''),
  OPENROUTER_API_KEY: z.string().default(''),
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
  MONITORING_INTERVAL: z.string().default('2700000'),
  ADMIN_USER_IDS: z.string().default(''),
  LOG_LEVEL: z.string().default('info'),
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏
  PROXY_ENABLED: z.string().default('false'),
  PROXY_USERNAME: z.string().default(''),
  PROXY_PASSWORD: z.string().default(''),
  PROXY_BYPASS: z.string().default(''),
  PROXY_POOL_IPS: z.string().default(''),
  PROXY_PORT: z.string().default('50101')
});

const parseConfig = (environment: NodeJS.ProcessEnv) => {
  const parsed = configSchema.parse(environment);
  
  return {
    ...parsed,
    isDev: parsed.NODE_ENV === "development",
    isProd: parsed.NODE_ENV === "production",
    monitoringInterval: parseInt(parsed.MONITORING_INTERVAL),
    adminUserIds: parsed.ADMIN_USER_IDS.split(',').map(id => parseInt(id.trim())).filter(id => !isNaN(id)),
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏
    proxy: {
      enabled: parsed.PROXY_ENABLED === 'true',
      username: parsed.PROXY_USERNAME,
      password: parsed.PROXY_PASSWORD,
      bypass: parsed.PROXY_BYPASS,
      poolIps: parsed.PROXY_POOL_IPS
        .split(',')
        .map(v => v.trim())
        .filter(v => v.length > 0),
      port: parseInt(parsed.PROXY_PORT || '50101', 10)
    }
  };
};

export type Config = ReturnType<typeof parseConfig>;
export const config = parseConfig(process.env);


// –°–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
export const MESSAGES = {
  welcome: `–î–ª—è —Ä–∞–∑–æ–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π "—Ä–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞" –∏–ª–∏ –∫–æ–º–∞–Ω–¥–æ–π /check

–î–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –Ω–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π "–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ".
–í —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –º–µ–Ω—é –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –≥—Ä—É–ø–ø—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –∏ —É–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π-–ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –æ—Ç—á–µ—Ç–æ–≤,
–ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π-–ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö.`,
  
  notRegistered: `‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`,
  error: `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`,
  invalidInn: `‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ò–ù–ù. –ò–ù–ù –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 10 –∏–ª–∏ 12 —Ü–∏—Ñ—Ä.`,
  adminOnly: `üîí –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.`,
  noOrganizations: `üìã –°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –ø—É—Å—Ç.`,
  noUsers: `üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç.`
};

// –≠–º–æ–¥–∑–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤
export const STATUS_EMOJIS = {
  red: 'üî¥',
  orange: 'üü°',
  green: 'üü¢'
};