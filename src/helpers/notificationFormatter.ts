import { KonturOrganizationData } from '../services/playwrightScrapeService';
import { formatCheckResult } from './messages';

export interface NotificationOptions {
  showTimestamp?: boolean;
  showRiskInfo?: boolean;
  showIllegalActivity?: boolean;
  customMessage?: string;
}

export class NotificationFormatter {
  /**
   * –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
   */
  static formatOrganizationCheck(
    inn: string, 
    data: KonturOrganizationData, 
    options: NotificationOptions = {}
  ): string {
    const {
      showTimestamp = true,
      showRiskInfo = true,
      showIllegalActivity = true,
      customMessage
    } = options;

    let message = '';

    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å —Å—Ç–∞—Ç—É—Å–æ–º
    const statusMessage = formatCheckResult(data.status);
    message += `${statusMessage}\n\n`;

    // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    if (data.name) {
      message += `üè¢ <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> ${data.name}\n`;
    }
    
    message += `üî¢ <b>–ò–ù–ù:</b> ${inn}\n`;

    // –ê–¥—Ä–µ—Å –∏ —Ä–µ–≥–∏–æ–Ω
    if (data.address) {
      message += `üìç <b>–ê–¥—Ä–µ—Å:</b> ${data.address}\n`;
    } else if (data.region) {
      message += `üìç <b>–†–µ–≥–∏–æ–Ω:</b> ${data.region}\n`;
    }

    // –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
    if (data.ogrn) {
      message += `üìã <b>–û–ì–†–ù:</b> ${data.ogrn}\n`;
    }
    if (data.kpp) {
      message += `üìã <b>–ö–ü–ü:</b> ${data.kpp}\n`;
    }
    if (data.okpo) {
      message += `üìã <b>–û–ö–ü–û:</b> ${data.okpo}\n`;
    }

    // –î–∞—Ç—ã
    if (data.registrationDate) {
      message += `üìÖ <b>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> ${data.registrationDate}\n`;
    }
    if (data.liquidationDate) {
      message += `‚ö†Ô∏è <b>–î–∞—Ç–∞ –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏:</b> ${data.liquidationDate}\n`;
    }
    if (data.unreliableDate) {
      message += `‚ùå <b>–î–∞—Ç–∞ –Ω–µ–¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã—Ö —Å–≤–µ–¥–µ–Ω–∏–π:</b> ${data.unreliableDate}\n`;
    }

    // –°—Ç–∞—Ç—É—Å –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏
    if (data.isLiquidated !== undefined) {
      message += `‚ö†Ô∏è <b>–õ–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞–Ω–∞:</b> ${data.isLiquidated ? '–î–∞' : '–ù–µ—Ç'}\n`;
    }

    // –ù–∞–ª–æ–≥–æ–≤—ã–π –æ—Ä–≥–∞–Ω
    if (data.taxAuthority) {
      message += `üèõÔ∏è <b>–ù–∞–ª–æ–≥–æ–≤—ã–π –æ—Ä–≥–∞–Ω:</b> ${data.taxAuthority}\n`;
    }

    // –£—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª
    if (data.capital) {
      message += `üí∞ <b>–£—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª:</b> ${data.capital}\n`;
    }

    // –í–∏–¥—ã –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    if (data.activities && data.activities.length > 0) {
      message += `üîß <b>–û—Å–Ω–æ–≤–Ω–æ–π –≤–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:</b> ${data.activities.join(', ')}\n`;
    }

    // –£—á—Ä–µ–¥–∏—Ç–µ–ª–∏
    if (data.founders && data.founders.length > 0) {
      message += `üë• <b>–£—á—Ä–µ–¥–∏—Ç–µ–ª–∏:</b> ${data.founders.join(', ')}\n`;
    }

    // –í–µ–±-—Å–∞–π—Ç—ã
    if (data.websites && data.websites.length > 0) {
      message += `üåê <b>–í–µ–±-—Å–∞–π—Ç—ã:</b> ${data.websites.join(', ')}\n`;
    }

    // –ü—Ä–∏–∑–Ω–∞–∫–∏ –Ω–µ–ª–µ–≥–∞–ª—å–Ω–æ—Å—Ç–∏
    if (data.illegalitySigns && data.illegalitySigns.length > 0) {
      message += `üö® <b>–ü—Ä–∏–∑–Ω–∞–∫–∏ –Ω–µ–ª–µ–≥–∞–ª—å–Ω–æ—Å—Ç–∏:</b> ${data.illegalitySigns.join(', ')}\n`;
    }

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∏—Å–∫–∞—Ö
    if (showRiskInfo && data.riskInfo) {
      message += `\n‚ö†Ô∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∏—Å–∫–∞—Ö:</b>\n${data.riskInfo}\n`;
    }

    // –û—Å–Ω–æ–≤–Ω–æ–π —Ä–∏—Å–∫ –∏ –¥–∞—Ç–∞
    if (data.primaryRisk) {
      message += `\n‚ö†Ô∏è <b>–û—Å–Ω–æ–≤–Ω–æ–π —Ä–∏—Å–∫:</b> ${data.primaryRisk}\n`;
    }
    if (data.primaryRiskDate) {
      message += `üìÖ <b>–û–±–Ω–æ–≤–ª–µ–Ω–æ:</b> ${data.primaryRiskDate}\n`;
    }

    // –ù–µ–¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è
    if (data.unreliableInfo) {
      message += `\n‚ùå <b>–ù–µ–¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è:</b> ${data.unreliableInfo}\n`;
      if (data.unreliableDate) {
        message += `üìÖ <b>–î–∞—Ç–∞:</b> ${data.unreliableDate}\n`;
      }
    }

    // –ù–µ–ª–µ–≥–∞–ª—å–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–¶–ë –†–§)
    if (showIllegalActivity && data.hasIllegalActivity !== undefined) {
      message += `\nüè¶ <b>–ü—Ä–æ–≤–µ—Ä–∫–∞ –¶–ë –†–§:</b> ${data.hasIllegalActivity ? '‚ùå –ù–∞–π–¥–µ–Ω–∞ –Ω–µ–ª–µ–≥–∞–ª—å–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å' : '‚úÖ –ù–∞—Ä—É—à–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'}\n`;
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    if (data.additionalInfo) {
      message += `\nüìã <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n${data.additionalInfo}\n`;
    }

    // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    if (data.comment) {
      message += `\nüí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> ${data.comment}\n`;
    }

    // –ö–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (customMessage) {
      message += `\n${customMessage}\n`;
    }

    // –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞
    if (showTimestamp) {
      message += `\n‚ûï <b>–û–±–Ω–æ–≤–ª–µ–Ω–æ:</b> ${new Date().toLocaleDateString('ru-RU')}`;
    }

    return message;
  }

  /**
   * –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
   */
  static formatStatusChange(
    inn: string,
    oldStatus: string,
    newData: KonturOrganizationData,
    options: NotificationOptions = {}
  ): string {
    const statusEmojis = {
      red: 'üî¥',
      orange: 'üü°',
      green: 'üü¢'
    };

    const statusNames = {
      red: '–ö—Ä–∞—Å–Ω—ã–π —Å–ø–∏—Å–æ–∫',
      orange: '–ñ–µ–ª—Ç—ã–π —Å–ø–∏—Å–æ–∫', 
      green: '–ó–µ–ª–µ–Ω—ã–π —Å–ø–∏—Å–æ–∫'
    };

    const oldEmoji = statusEmojis[oldStatus as keyof typeof statusEmojis] || '‚ö™';
    const newEmoji = statusEmojis[newData.status as keyof typeof statusEmojis] || '‚ö™';
    const oldName = statusNames[oldStatus as keyof typeof statusNames] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    const newName = statusNames[newData.status as keyof typeof statusNames] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

    const header = `üîÑ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</b>\n\n`;
    const statusChange = `${oldEmoji} ${oldName} ‚Üí ${newEmoji} ${newName}\n\n`;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∞—Ç–µ —Å–æ–±—ã—Ç–∏—è
    let eventInfo = '';
    if (newData.liquidationDate && newData.isLiquidated) {
      eventInfo = `üìÖ <b>–î–∞—Ç–∞ –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏:</b> ${newData.liquidationDate}\n\n`;
    } else if (newData.unreliableDate) {
      eventInfo = `üìÖ <b>–î–∞—Ç–∞ –Ω–µ–¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã—Ö —Å–≤–µ–¥–µ–Ω–∏–π:</b> ${newData.unreliableDate}\n\n`;
    }

    return header + statusChange + eventInfo + this.formatOrganizationCheck(inn, newData, {
      ...options,
      showTimestamp: true
    });
  }

  /**
   * –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ—Ä–∫–µ –ó–°–ö
   */
  static formatZskCheck(
    inn: string,
    status: string,
    resultText: string,
    options: NotificationOptions = {}
  ): string {
    const statusIcon = status === 'red' ? 'üî¥' : 'üü¢';
    const statusText = status === 'red' ? '–ù–∞–π–¥–µ–Ω—ã –Ω–∞—Ä—É—à–µ–Ω–∏—è' : '–ù–∞—Ä—É—à–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ';

    let message = `üîç <b>–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –ó–°–ö</b>\n\n`;
    message += `${statusIcon} <b>–°—Ç–∞—Ç—É—Å:</b> ${statusText}\n`;
    message += `üî¢ <b>–ò–ù–ù:</b> ${inn}\n\n`;
    message += `üìã <b>–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:</b>\n${resultText}\n\n`;

    if (options.showTimestamp !== false) {
      message += `‚ûï <b>–û–±–Ω–æ–≤–ª–µ–Ω–æ:</b> ${new Date().toLocaleDateString('ru-RU')}`;
    }

    return message;
  }

  /**
   * –§–æ—Ä–º–∏—Ä—É–µ—Ç –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
   */
  static formatQuickCheck(
    inn: string,
    data: KonturOrganizationData
  ): string {
    const statusEmojis = {
      red: 'üî¥',
      orange: 'üü°',
      green: 'üü¢'
    };

    const emoji = statusEmojis[data.status] || '‚ö™';
    
    let message = `${emoji} <b>${data.name || `–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è ${inn}`}</b>\n`;
    message += `üî¢ –ò–ù–ù: ${inn}\n`;
    message += `üìç ${data.region || data.address || '–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω'}\n`;
    
    if (data.isLiquidated) {
      message += `‚ö†Ô∏è –õ–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞–Ω–∞\n`;
    }
    
    if (data.hasIllegalActivity) {
      message += `üö® –ù–∞—Ä—É—à–µ–Ω–∏—è –¶–ë –†–§\n`;
    }

    return message;
  }
}
