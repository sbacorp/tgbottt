import { STATUS_EMOJIS, STATUS_MESSAGE } from "../utils/config";

export function formatOrganizationList(organizations: any[]): string {
  if (organizations.length === 0) {
    return "üìã –°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –ø—É—Å—Ç.";
  }

  let message = "üìã –°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π:\n\n";
  console.log(organizations, 'organizations')
  
  for (const org of organizations) {
    const emoji = STATUS_EMOJIS[org.status as keyof typeof STATUS_EMOJIS];
    const statusMessage = STATUS_MESSAGE[org.status as keyof typeof STATUS_MESSAGE];
    
    message += `${emoji} <b>${org.inn}</b>\n`;
    message += `   –ê–∫—Ç—É–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: ${org.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n`;
    message += `   –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${org.undated_at ? org.undated_at.toLocaleDateString('ru-RU') : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n`;
    message += `   –†–µ–≥–∏–æ–Ω: ${org.region || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n`;
    
    message += `\n${statusMessage}\n\n`;
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∏—Å–∫–∞—Ö –¥–ª—è –æ—Ä–∞–Ω–∂–µ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
    if (org.status === 'orange' && org.riskInfo) {
      message += `   ‚ö†Ô∏è –†–∏—Å–∫–∏: ${org.riskInfo}\n`;
    }
    
  }

  return message;
}

export function formatUsersList(users: any[]): string {
  if (users.length === 0) {
    return "üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç.";
  }

  let message = "üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π (–∞–∫—Ç—É–∞–ª—å–Ω—ã–π):\n\n";
  
  for (const user of users) {
    const adminBadge = user.isAdmin ? ' –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '';
    const username = user.username ? `@${user.username}` : `ID: ${user.telegramId}`;
    
    message += `${username}${adminBadge}\n`;
  }

  return message;
}

export function formatCheckResult(inn: string, result: any): string {
  let riskEmoji = '‚ùì';
  if (result.riskLevel === 'high') riskEmoji = 'üî¥';
  else if (result.riskLevel === 'medium') riskEmoji = 'üü°';
  else if (result.riskLevel === 'low') riskEmoji = 'üü¢';
  
  let message = `üìä <b>–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ò–ù–ù ${inn}</b>\n\n`;
  message += `${riskEmoji} <b>–£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞:</b> ${result.riskLevel}\n`;
  message += `üìù <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> ${result.message}\n`;
  
  if (result.details) {
    message += `\nüìà <b>–î–µ—Ç–∞–ª–∏:</b>\n`;
    if (result.details.liquidationFacts && result.details.liquidationFacts > 0) {
      message += `üî¥ –§–∞–∫—Ç—ã –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏/–±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–∞: ${result.details.liquidationFacts}\n`;
    }
    if (result.details.attentionFacts && result.details.attentionFacts > 0) {
      message += `ÔøΩ –§–∞–∫—Ç—ã –≤–Ω–∏–º–∞–Ω–∏—è: ${result.details.attentionFacts}\n`;
    }
    if (result.details.favorableFacts && result.details.favorableFacts > 0) {
      message += `üü¢ –ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–µ —Ñ–∞–∫—Ç—ã: ${result.details.favorableFacts}\n`;
    }
  }
  
  return message;
}

export function formatSystemStatus(status: any, organizations: any[], users: any[]): string {
  let message = 'üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:\n\n';
  message += `üîÑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: ${status.isRunning ? '‚úÖ –ó–∞–ø—É—â–µ–Ω' : '‚ùå –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}\n`;
  
  if (status.lastCheck) {
    message += `üïê –ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞: ${status.lastCheck.toLocaleString('ru-RU')}\n`;
  }

  const redCount = organizations.filter(org => org.status === 'red').length;
  const orangeCount = organizations.filter(org => org.status === 'orange').length;
  const greenCount = organizations.filter(org => org.status === 'green').length;

  message += `\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n`;
  message += `üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π: ${organizations.length}\n`;
  message += `üî¥ –ö—Ä–∞—Å–Ω—ã–π —Å–ø–∏—Å–æ–∫: ${redCount}\n`;
  message += `üü° –ñ–µ–ª—Ç—ã–π —Å–ø–∏—Å–æ–∫: ${orangeCount}\n`;
  message += `üü¢ –ó–µ–ª—ë–Ω—ã–π —Å–ø–∏—Å–æ–∫: ${greenCount}\n`;
  message += `üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`;

  return message;
}
