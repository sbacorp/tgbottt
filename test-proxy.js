const { chromium } = require('playwright');
require('dotenv').config();

async function testProxy() {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏ –¥–ª—è Playwright...\n');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏
    const proxyConfig = {
        enabled: process.env.PROXY_ENABLED === 'true',
        server: '',
        username: process.env.PROXY_USERNAME || '',
        password: process.env.PROXY_PASSWORD || '',
        bypass: process.env.PROXY_BYPASS || ''
    };
    
    console.log('üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏:');
    console.log(`   –í–∫–ª—é—á–µ–Ω: ${proxyConfig.enabled ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}`);
    console.log(`   –°–µ—Ä–≤–µ—Ä: ${proxyConfig.server || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
    console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${proxyConfig.username || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
    console.log(`   –ü–∞—Ä–æ–ª—å: ${proxyConfig.password ? '***' : '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
    console.log(`   –ò—Å–∫–ª—é—á–µ–Ω–∏—è: ${proxyConfig.bypass || '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}\n`);
    
    if (!proxyConfig.enabled || !proxyConfig.server) {
        console.log('‚ùå –ü—Ä–æ–∫—Å–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PROXY_ENABLED=true –∏ PROXY_POOL_IPS –≤ .env —Ñ–∞–π–ª–µ');
        return;
    }
    
    let browser;
    try {
        console.log('üöÄ –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞ —Å –ø—Ä–æ–∫—Å–∏...');
        
        const launchOptions = {
            headless: false, // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            args: [
                '--no-sandbox',
                '--disable-setuid-sandbox'
            ]
        };
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–∫—Å–∏
        launchOptions.proxy = {
            server: proxyConfig.server
        };
        
        if (proxyConfig.username && proxyConfig.password) {
            launchOptions.proxy.username = proxyConfig.username;
            launchOptions.proxy.password = proxyConfig.password;
        }
        
        if (proxyConfig.bypass) {
            launchOptions.proxy.bypass = proxyConfig.bypass;
        }
        
        browser = await chromium.launch(launchOptions);
        const page = await browser.newPage();
        
        console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–æ–∫—Å–∏');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º IP-–∞–¥—Ä–µ—Å
        console.log('üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ IP-–∞–¥—Ä–µ—Å–∞...');
        await page.goto('https://api.ipify.org?format=json');
        await page.waitForLoadState('networkidle');
        
        const ipText = await page.textContent('body');
        const ipData = JSON.parse(ipText);
        console.log(`   –¢–µ–∫—É—â–∏–π IP: ${ipData.ip}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É —Å —Å–∞–π—Ç–æ–º –¶–ë –†–§
        console.log('üè¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∞–π—Ç—É –¶–ë –†–§...');
        await page.goto('https://cbr.ru/');
        await page.waitForLoadState('networkidle');
        
        const title = await page.title();
        console.log(`   –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${title}`);
        
        if (title.includes('–¶–ë –†–§') || title.includes('CBR')) {
            console.log('‚úÖ –î–æ—Å—Ç—É–ø –∫ —Å–∞–π—Ç—É –¶–ë –†–§ —É—Å–ø–µ—à–µ–Ω');
        } else {
            console.log('‚ö†Ô∏è  –î–æ—Å—Ç—É–ø –∫ —Å–∞–π—Ç—É –¶–ë –†–§ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω');
        }
        
        // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
        const screenshot = await page.screenshot();
        require('fs').writeFileSync('proxy-test-screenshot.png', screenshot);
        console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ proxy-test-screenshot.png');
        
        console.log('\n‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–∫—Å–∏ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–∫—Å–∏:', error.message);
        
        if (error.message.includes('proxy')) {
            console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
            console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∞–¥—Ä–µ—Å–∞ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞');
            console.log('   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω');
            console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
            console.log('   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–æ–∫—Å–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç HTTPS');
        }
    } finally {
        if (browser) {
            await browser.close();
            console.log('üîí –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç');
        }
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testProxy().catch(console.error);
