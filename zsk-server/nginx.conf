worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # DNS resolver для прокси
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    log_format proxy '$remote_addr - $remote_user [$time_local] '
                     '"$request" $status $body_bytes_sent '
                     '"$http_referer" "$http_user_agent"';
    
    access_log /var/log/nginx/access.log proxy;
    
    sendfile on;
    keepalive_timeout 65;
    
    client_max_body_size 100M;
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    server {
        listen 8888;
        server_name _;
        
        auth_basic "ZSK Proxy Server";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        proxy_set_header Host $proxy_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
        
        # Сначала специальные эндпоинты
        location = / {
            auth_basic off;
            return 200 '{"message":"ZSK Proxy Server","port":"8888","auth":"required"}';
            add_header Content-Type application/json;
        }
        
        location = /status {
            auth_basic off;
            return 200 '{"status":"running","server":"nginx","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }
        
        location = /health {
            auth_basic off;
            return 200 'OK';
            add_header Content-Type text/plain;
        }
        
        # Потом прокси для всего остального
        location ~ ^/(.+) {
            set $target_url $1;
            
            if ($target_url !~ "^https?://") {
                set $target_url "http://$target_url";
            }
            
            proxy_pass $target_url;
            proxy_redirect off;
            proxy_ssl_verify off;
        }
    }
}